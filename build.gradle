/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java Library project to get you started.
 * For more details take a look at the Java Libraries chapter in the Gradle
 * User Manual available at https://docs.gradle.org/5.5/userguide/java_library_plugin.html
 */

plugins {
    // Apply the java-library plugin to add support for Java Library
    id 'java-library'
    id 'base'
}

repositories {
    // Use jcenter for resolving dependencies.
    // You can declare any Maven/Ivy/file repository here.
    mavenCentral()
    jcenter()
}

dependencies {
    // This dependency is exported to consumers, that is to say found on their compile classpath.
    api 'org.apache.httpcomponents:httpclient:4.5.7'

    // This dependency is used internally, and not exposed to consumers on their own compile classpath.
    implementation 'com.google.guava:guava:27.1-jre'

    // Use JUnit test framework
    testImplementation (
            'junit:junit:4.12',
            'org.junit.jupiter:junit-jupiter-api:5.4.2'
    )
    testRuntime (
            'org.junit.jupiter:junit-jupiter-engine:5.4.2',
            'org.junit.vintage:junit-vintage-engine:5.4.2'
    )
}

test {
    useJUnitPlatform()
}

jar {
    baseName = 'ImageModifier'
    version = '1.0'
}

task runCodedImage(type:JavaExec) {
    classpath = sourceSets.main.runtimeClasspath
    main = project.hasProperty("CodedImage") ? project.getProperty("CodedImage") : "ImgModifier.CodedImage"
}

task runImgModifier(type:JavaExec, dependsOn: runCodedImage) {
    classpath = sourceSets.main.runtimeClasspath
    main = project.hasProperty("ReducedImageSize") ? project.getProperty("ReducedImageSize") : "ImgModifier.ReducedImageSize"
    doLast {}
}
